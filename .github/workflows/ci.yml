name: MatrixChain pre-commit and post-push
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  test:
    runs-on: ubuntu-24.04
    defaults:
      run:
        shell: bash
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: install uv
        uses: astral-sh/setup-uv@v5

      - name: set common environment
        run: |
          uv venv
          source .venv/bin/activate
          uv sync
          {
            echo "VIRTUAL_ENV=$VIRTUAL_ENV"
          } >> "$GITHUB_ENV"
      
      - name: install conan
        run: |
          pip install conan
          conan profile detect --force
          conan remote add conan_packages ${{ secrets.CONAN_ADDRESS }}
  
      - name: CMake release config
        run: |
          conan install . --build=missing -s compiler.cppstd=gnu20 -s build_type=Release
          cmake --preset release
          cmake --build build/Release

      - name: CMake release test
        run: ctest --test-dir build --rerun-failed --output-on-failure

      - name: CMake debug config
        run: |
          conan install . --build=missing -s compiler.cppstd=gnu20 -s build_type=Debug
          cmake --preset debug
          cmake --build build/Debug

      - name: CMake debug test
        run: ctest --test-dir build --rerun-failed --output-on-failure


  deploy:
    needs: test
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: install uv
        uses: astral-sh/setup-uv@v5

      - name: set common environment
        run: |
          uv venv
          source .venv/bin/activate
          uv sync
          {
            echo "VIRTUAL_ENV=$VIRTUAL_ENV"
          } >> "$GITHUB_ENV"
      
      - name: install & setup conan
        run: |
          pip install conan
          conan profile detect --force
          conan remote add conan_packages ${{ secrets.CONAN_ADDRESS }}
          CONAN_VISITOR="${{ secrets.CONAN_USERNAME }}\n${{ secrets.CONAN_PASSWORD }}"
          echo -e "$CONAN_VISITOR" | conan remote login conan_packages
        
      - name: create release conan package
        run: |
          conan install . --build=missing -s compiler.cppstd=gnu20 -s build_type=Release
          conan create . --build=missing -s build_type=Release

      - name: create debug conan package
        run: |
          conan install . --build=missing -s compiler.cppstd=gnu20 -s build_type=Debug
          conan create . --build=missing -s build_type=Debug

      - name: upload conan packages to server
        run: |
          conan upload matrix_chain/1.0@ --remote conan_packages